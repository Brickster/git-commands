#! /usr/bin/env python

import argparse
import os
import sys

from commands import settings, tuck
from commands.utils import parse_string

# specific usage message needed to include the '--' part
_USAGE_MESSAGE = """git tuck [MESSAGE] [-h] [-v] [-i|-I] [-q|-d] [-x|-X]
                [-c [{always,never,auto}]|-C] -- FILE [FILE ...]"""

parser = argparse.ArgumentParser(
    prog='git tuck',
    version='git-tuck 0.5.0',
    usage=_USAGE_MESSAGE,
    description=tuck.__doc__,
    epilog='for more detail, use: git help tuck'
)

parser.add_argument('message', help='message used when stashing the files', nargs='?', metavar='MESSAGE')

# -- <files> ...
# NOTE: this is so the files argument is listed in the argparse output. All file arguments are handled manually.
parser.add_argument('files', help='files to stash', nargs='?', metavar='FILE')

# -q|--quiet
quiet_dry_group = parser.add_mutually_exclusive_group()
quiet_dry_group.add_argument(
    '-q',
    '--quiet',
    help='suppress all non-error output',
    action='store_true',
    default=False
)
quiet_dry_group.add_argument(
    '-d',
    '--dry-run',
    help='print the resulting stash and working directory but do not tuck anything',
    action='store_true',
    default=False
)

# -i|--ignore-deleted
ignored_deleted_group = parser.add_mutually_exclusive_group()
ignored_deleted_group.add_argument(
    '-i',
    '--ignore-deleted',
    help="don't print the error message for deleted files not explicitly included",
    action='store_true',
    default=settings.get('git-tuck.ignore-deleted', default=False, as_type=parse_string.as_bool)
)
ignored_deleted_group.add_argument(
    '-I',
    '--no-ignore-deleted',
    help="always print the error message for deleted files not explicitly included",
    action='store_false',
    dest='ignore_deleted'
)

default_show_color = settings.get('color.ui', default='auto')
# color
color_group = parser.add_mutually_exclusive_group()
color_group.add_argument(
    '-c',
    '--color',
    help='color output',
    const='always',
    dest='show_color',
    nargs='?',
    choices=('always', 'never', 'auto'),
    default=default_show_color
)
color_group.add_argument(
    '-C',
    '--no-color',
    help='never color output',
    action='store_const',
    const='never',
    dest='show_color'
)

# indexed group
indexed_group = parser.add_mutually_exclusive_group()
indexed_group.add_argument(
    '-x',
    '--indexed',
    help='tuck indexed files',
    dest='indexed',
    action='store_true',
    default=None
)
indexed_group.add_argument('-X', '--unindexed', help='tuck unindexed files', dest='indexed', action='store_false')

# check for args that match the format: '-- <files> [<files> ..]
args = sys.argv[1:]
file_args = []
if '--' in args:
    delimiter_index = args.index('--') if '--' in args else len(args)
    file_args = args[delimiter_index + 1:]
    args = args[:delimiter_index]

args = parser.parse_args(args)
args.files = file_args
if not args.files and args.indexed is None:
    sys.exit('usage: {}{}git tuck: error: at least one file must be included'.format(_USAGE_MESSAGE, os.linesep))
elif args.files and args.indexed is not None:
    index_opt = '-x|--indexed' if args.indexed else '-X|--unindexed'
    sys.exit('usage: {}{}git tuck: error: specifying files is not compatible with indexing option: {}'.format(
        _USAGE_MESSAGE,
        os.linesep,
        index_opt
    ))

tuck.tuck(**vars(args))
