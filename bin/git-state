#! /usr/bin/env python

import argparse

from commands import settings, state
from commands.utils import parse_string
from commands.utils.parse_actions import append_list, dict_set, optional_list


def main():

    # general defaults
    default_show_empty = settings.get('git-state.show-empty', default=False, as_type=parse_string.as_bool)
    default_format = settings.get('git-state.format', default='compact')
    default_show_color = settings.get('color.ui', default='auto')
    default_clear = settings.get('git-state.clear', default=True, as_type=parse_string.as_bool)

    parser = argparse.ArgumentParser(
        prog='git state',
        version='git-state 0.6.1',
        description=state.__doc__,
        epilog='for more detail, use: git help state'
    )

    # add --show-/--no-show- flags for custom extensions
    extensions = settings.list_(
        section='git-state.extensions',
        config=None,
        count=False,
        limit_to='keys',
        format_=None,
        file_=None
    ).splitlines()
    extension_group = parser.add_mutually_exclusive_group()
    extension_group.add_argument(
        '--show-status',
        help='show status extension',
        action=append_list('status'),
        nargs=0,
        dest='show_extensions',
        default=[]
    )
    extension_group.add_argument(
        '--no-show-status',
        help='hide status extension',
        action=append_list('status'),
        nargs=0,
        dest='ignore_extensions',
        default=[]
    )
    for extension in extensions:
        section_name = settings.get('git-state.extensions.' + extension + '.name', default=extension)
        extension_group.add_argument(
            '--show-' + extension,
            help='show {} extension'.format(section_name),
            action=append_list(extension),
            nargs=0,
            dest='show_extensions',
            default=[]
        )
        extension_group.add_argument(
            '--no-show-' + extension,
            help='hide {} extension'.format(section_name),
            action=append_list(extension),
            nargs=0,
            dest='ignore_extensions',
            default=[]
        )

    # ignore sections
    all_extensions = settings.list_(
        'git-state.extensions',
        config=None,
        count=False,
        limit_to='keys',
        format_=None
    ).splitlines()
    no_show_parser = parser.add_mutually_exclusive_group()
    no_show_parser.add_argument(
        '--no-show',
        help='extensions to hide',
        nargs='*',
        action=optional_list(),
        const=all_extensions,
        default=[],
        dest='ignore_extensions',
        metavar='EXTENSION'
    )
    no_show_parser.add_argument(
        '--no-show-all',
        help='hide all extensions',
        action='store_const',
        const=all_extensions,
        dest='ignore_extensions'
    )

    # color
    color_group = parser.add_mutually_exclusive_group()
    color_group.add_argument(
        '-c',
        '--color',
        help='color output',
        const='always',
        dest='show_color',
        nargs='?',
        choices=('always', 'never', 'auto'),
        default=default_show_color
    )
    color_group.add_argument(
        '-C',
        '--no-color',
        help='never color output',
        action='store_const',
        const='never',
        dest='show_color'
    )

    # format
    format_group = parser.add_mutually_exclusive_group()
    format_group.add_argument(
        '-f',
        '--format',
        help='format the each section (choices: compact, pretty)',
        choices=('pretty', 'compact'),
        metavar='FORMAT',
        dest='format_',
        default=default_format
    )
    format_group.add_argument(
        '-p',
        '--pretty',
        help='show in pretty format',
        action='store_const',
        const='pretty',
        dest='format_'
    )

    # show empty
    show_empty_group = parser.add_mutually_exclusive_group()
    show_empty_group.add_argument(
        '-e',
        '--show-empty',
        help='show empty sections',
        action='store_true',
        dest='show_empty',
        default=default_show_empty
    )
    show_empty_group.add_argument(
        '-E',
        '--no-show-empty',
        help="don't show empty sections (does not apply to status)",
        action='store_false',
        dest='show_empty'
    )

    # screen clearing
    clear_group = parser.add_mutually_exclusive_group()
    clear_group.add_argument(
        '--clear',
        help='clear the screen before printing',
        action='store_true',
        dest='clear',
        default=default_clear
    )
    clear_group.add_argument(
        '--no-clear',
        help='do not clear the screen before printing',
        action='store_false',
        dest='clear'
    )

    parser.add_argument(
        '-o',
        '--order',
        help='custom section order',
        nargs='+',
        default=argparse.SUPPRESS,
        metavar='SECTION'
    )

    parser.add_argument(
        '-O',
        '--options',
        help='options to pass to custom extensions',
        nargs='+',
        default={},
        action=dict_set(':'),
        metavar='OPTION'
    )

    parser.add_argument(
        '--no-page',
        help='do not page output',
        action='store_false',
        default=True,
        dest='page'
    )

    state.state(**vars(parser.parse_args()))

if __name__ == '__main__':
    main()
