#! /usr/bin/env python

import ast
import getopt
import re
import sys

from subprocess import call, check_output
from utils.help import man
from utils.messages import version, error, usage


def get_upstream(include_remote=False):
    """Get the upstream branch of the current branch."""

    branch_info = check_output(['git', 'status', '--porcelain', '--branch']).splitlines()[0]
    regex = "^##\s[-_a-zA-Z0-9]+\.{3}([-_a-zA-Z0-9]+/([-_a-zA-Z0-9]+))(?:\s\[.*\])?$"
    match = re.match(regex, branch_info)

    upstream_info = ''
    if match is not None:
        upstream_info = match.group(1) if include_remote else match.group(2)

    return upstream_info


def get_include_remote_default():
    """Get the default value for including remote info."""

    default = check_output(['git', 'settings', '-d', 'false', 'git-upstream.include-remote']).splitlines()[0]
    default = str(default).lower() == 'true'
    return default


def main(argv):
    try:
        opts, left_args = getopt.getopt(argv, 'hvrR', ['help', 'version', 'include-remote', 'no-include-remote'])
    except getopt.GetoptError as e:
        error(e.msg, exit=False)
        usage(['git upstream [(-r|--include-remote)] [(-R|--no-include-remote)]', 'git upstream (-h|--help)', 'git upstream (-v|--version)'])

    include_remote = get_include_remote_default()
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            man()
        elif opt in ('-v', '--version'):
            version('0.1.0')
        elif opt in ('-r', '--include-remote'):
            include_remote = True
        elif opt in ('-R', '--no-include-remote'):
            include_remote = False

    print get_upstream(include_remote)

if __name__ == "__main__":
    main(sys.argv[1:])
