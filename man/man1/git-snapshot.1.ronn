# git-snapshot(1) -- create a snapshot of the changes in a dirty working directory

## SYNOPSIS

`git snapshot` [(`-q`|`--quiet`)] [(-m|--message) <message>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[-- <file> [<file> ...]]<br>
`git snapshot` (`-h`|`--help`)<br>
`git snapshot` (`-v`|`--version`)

## DESCRIPTION

Used to record the current state of the working directory without reverting it. This is effectively a shortcut to:

```bash
$ git stash save -u "optional message"
$ git stash apply
```

## OPTIONS

* `-m`|`--message` <message> :
    The message to use when creating the underlying stash. If no message is supplied, the default `git-stash` message is used.

* `-q`|`--quiet`:
    Suppress all non-error output.

* `-h`|`--help`:
    Print a simple help message.

* `-v`|`--version`:
	Print version.

* `--`:
    Do not interpret any more arguments as options.

* `<file>` ...:
    Files to be tucked. The files can be absolute or specified using pathspecs.

## SEE ALSO

git-stash(1), gitglossary(7)
