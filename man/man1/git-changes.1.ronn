# git-changes(1) -- lists the commits between this branch and another

## SYNOPSIS

`git changes view` [(`-b`|`--branch`) <branch>] [(`-c`|`--count`)] [(`-s`|`--stat`)]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(`-d`|`--diff`)] [`--color` [<when>]] [`--no-color`]<br>
`git changes associate` [(`-q`|`--quiet`)] [<branch>]<br>
`git changes unassociate` [(`-a`|`--all`)] [(`-p`|`--prune`)] [(`-q`|`--quiet`)]<br>
`git changes` (`-h`|`--help`)<br>
`git changes` (`-v`|`--version`)

## DESCRIPTION

`git-changes` lists the commits between the current branch and another. Changes are defined as the commits between HEAD and the merge base calculated using the current and a user specified branch.

## OPTIONS

* `view`:
    View changes between branches. This is the default when no subcommand is specified.

    * `-b`|`--branch` <branch>:
        Show the commits between HEAD and <branch>. When not specified, the branch's association is used. If no association exists, master is used.

    * `-c`|`--count`:
        Show as a count of changes.

    * `-s`|`--stat`:
        Show as a diffstat.

    * `-d`|`--diff`:
        Show as a full diff.

    * `--color` [<when>]:
        Show colored output. <when> must be one of `always`, `never`, or `auto`. Not including <when> is equivalent to `--color=always`.

    * `--no-color`:
        Never color output. Same as `--color=never`.

* `associate`:
    View/update the current association.

    * _None_:
        Print the current association.

    * <branch>:
        Associate the current branch with another. Once associated, `-b`|`--branch` can be omitted when using `view` and the association will be used.

    * `-q`|`--quiet`:
        Suppress all non-error output. Cannot be used without <branch>.

* `unassociate`:
    Remove associations.

    * _None_:
        Unassociate the current branch.

    * `-a`|`--all`:
        Unassociate all branches.

    * `-p`|`--prune`:
        Unassociate branches that no longer exist.

    * `-q`|`--quiet`:
        Suppress all non-error output.

* `-h`|`--help`:
    Print a simple help message.

* `-v`|`--version`:
    Print version.

## CONFIGURATION

* `git-changes.default-branch` <string>:
    The default branch to use when finding changes. Option (`-b`|`--branch`) <branch> overrides this setting.

    Default: <master>

* `git-changes.associations.*` <string>:
    Defines an association between the branch in the key and the value. Under normal circumstances, these entries are created/removed automatically.

    Default: <master>

## SEE ALSO

git-diff(1), git-log(1)
