# git-settings(1) -- more ways to view and edit config files

## SYNOPSIS

`git settings` [<file-option>] [(`-d`|`--default`) <value>] <key><br>
`git settings` [(`-h`|`--help`)]<br>
`git settings destroy` <section><br>
`git settings print` [<file-option>] [(`-p`|`--pretty`)] [(`-f`|`--format`) <format>] [(`-c`|`--count`)] <section><br>
`git settings list`

## DESCRIPTION

`git-settings` is a compliment to `git-config` that adds missing functionality.

## OPTIONS

* `-d`|`--default` <key>:
    A default value to use when no setting exists for a given <key>.

    * <file-option>:
        The key will be loaded from a specific file. See "**FILE OPTIONS**" section for more details.

* `destroy` <section>:
    Destroy a section from the local, global, and system config files.

* `print` <section>:
    Print all values for a section respecting overrides.

    * <file-option>:
        Limits the section values to a specific file. See "**FILE OPTIONS**" section for more details.

    * `-p`|`--pretty`:
        The section is printed in config file format.

    * `-f`|`--format` <format>:
        The section is printed in the specified format. Valid values include: <compact> and <pretty>.

    * `-c`|`--count`:
        The count of keys in a given section is printed rather than the section itself.

* `list`:
    List all configuration settings respecting override precedence.

* `-h`|`--help`:
    Display git-settings man page.

## FILE OPTIONS

Some subcommands can be limited to a specific file. The valid options are:

* `-l`|`--local`:
    Use local config file.

* `-g`|`--global`:
    Use global config file.

* `-s`|`--system`:
    Use system config file.

## CONFIGURATION

* `git-settings.print.format` <string>:
    The default formatting for git-setting print. Valid options include: `pretty` and `compact`. If no value is specified or an invalid value is entered, compact is used. The option `-p`|`--pretty` will override this setting.

    Default: <compact>
