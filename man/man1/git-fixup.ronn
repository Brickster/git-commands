# git-fixup(1) -- commits staged changes as an autosquashable fixup

## SYNOPSIS

`git fixup` [(`-a`|`--all`)] [(`-u`|`--update`)]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(`-b`|`--message-body`) <message-body>] [<commit>]<br>
`git fixup` (`-h`|`--help`)<br>
`git fixup` (`-v`|`--version`)

## CHANGES

`git-fixup` is a shortcut for committing staged changes as an autosquashable fixup. The commit message starts with "fixup!" and ends with the last commit's message. The changes can then be autosquashed using an interactive rebase.

While `git-commit` does include a `--fixup=<commit>` option, using it consecutively without getting commit messages with multiple "fixup!" entries is more tedious than it should to be.

## OPTIONS

* <commit>:
    Use <commit>'s subject for the fixup message.

* `-b`|`--message-body` <message-body>:
    The message body to use in the fixup commit. It will go away when the fixup occurs but can be useful for traceability until that point.

* `-a`|`--all`:
    Stage all files before making the fixup commit.

* `-u`|`--update`:
    Stage tracked files before making the fixup commit.

* `-h`|`--help`:
    Print a simple help message.

* `-v`|`--version`:
    Print version.

## SEE ALSO

[git-commit(1)](http://git-scm.com/docs/git-commit)
